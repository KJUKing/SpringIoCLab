<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
    <context:component-scan base-package="kr.or.ddit.lab01" annotation-config="true" use-default-filters="true">
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>

<!--    클래스의 인스턴스를 빈으로 등록하기 위한 어노테이션-->
<!--    @Component-->
<!--    @Repository-->
<!--    @Service-->
<!--    @Controller-->
<!--    그냥 어떤걸 등록해도 문제없이되는데 사람보기편하라고 설정해주는거임-->
<!--    @Configuration-->
<!--    @RestController-->
<!--    @ControllerAdvice-->
<!--    @RestControllerAdvice-->
<!--    외존성 주입을 위한 어노테이션-->
<!--    @AutoWired / @Inject - type injection-->
<!--    @Resource / @Inject+@Named - naming injection -->
<!--    컨테이너의 빈 관리 특성 제어용 어노테이션-->
<!--    @Scope : singleton / prototype-->
<!--    @Lazy : lazy[eager] loading -->
<!--    @PostConstruct / @PreDestroy : lifecycle Callback-->
<!--    @Value : spEL/placeholder 를 기반으로 literal injection-->

</beans>